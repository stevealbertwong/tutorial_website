## microservice
server {
  listen 8080;
  root /srv/www/static;
  location / {
    # We try to get static files from nginx first
    # because node is not great at IO operations
    try_files $uri $uri/ @web;
  }
  location @web {
    proxy_pass http://web:3000;
  }
  location /api/v1/search {
    proxy_pass http://search:3000;
  }
  location /api/v1/search/depends-on {
    proxy_pass http://search:3000;
  }
  location /api/v1/books {
    proxy_pass http://books:3000;
  }
  location /api/v1/videos {
    proxy_pass http://videos:3000;
  }
}


server {
  
  ## boilerplate since using graphql subscription endpoint
  ## websocket proxying 

    location /subscriptions {
        proxy_pass http://web:8081/subscriptions;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    ## filepath /file, replace app server to serve static files

    location /files {
        alias /files/;    ## serve from folder on container
        gzip_static on;   ## compress file before send
        expires max;    ## cache static files, route dont change
        add_header Cache-Control private; ## browser not to cache
    }
    
    ## filepath /graphql -> all route to app server
    ## web -> app server "docker compose" service name

    location /graphql {
        proxy_pass http://web:8081;
    }
}